import * as yup from "yup";

export const polizaSchema = () => yup
    .object({
        insuranceCarrierId: yup.number().typeError('Debe seleccionar una aseguradora').required('Debe seleccionar una Aseguradora'),
        policyNum: yup.number().typeError('Debe ingresar un numero').required('El numero de poliza es requerido'),
        policyStatusId: yup.number().typeError('Debe seleccionar un estado de poliza').required('Debe seleccionar un Estado de Poliza'),
        insuredValue: yup.number().typeError('Debe ingresar un numero').required('El valor asegurado es requerido'),
        subBranchId: yup.number().typeError('Debe seleccionar un subramo').required('Debe seleccionar un Subramo'),
        Risk: yup.string().required('El ID del riesgo es requerido'),
        Renovable: yup.boolean().required('Marque una Opcion'),
        clientId: yup.number().typeError('Debe seleccionar un Cliente').required('Debe seleccionar un Cliente'),
        agentId: yup.number().typeError('Debe seleccionar un Agente').required('Debe seleccionar un Agente'),
        relationId: yup.number().typeError('Debe seleccionar una Relacion').required('Debe seleccionar una Relacion'),
        periodicityId: yup.number().typeError('Debe seleccionar una Periodicidad').required('Debe seleccionar una Periodicidad'),
        currencyId: yup.number().typeError('Debe seleccionar un tipo de moneda').required('Debe seleccionar un tipo de moneda'),
        primeValue: yup.number().typeError('Debe ingresar un numero').required('El valor de la prima es requerido'),
        AnnexValue: yup.number().typeError('Debe ingresar un numero'),
        comission: yup.number().typeError('Debe ingresar un numero'),
        comissionPolicyStatus: yup.boolean().required('Marque una Opcion'),
        ValorFinalizacion: yup.number().typeError('Debe ingresar un numero'),
        Total: yup.number().typeError('Debe ingresar un numero').required('El valor total es requerido'),
        periodStartDate: yup.date().typeError('Debe ingresar una fecha'),
        periodEndDate: yup.date().typeError('Debe ingresar una fecha'),
        renewal: yup.number().typeError('Debe ingresar un numero').required('El numero de renovaciones es requerido'),
      //  type: yup.string().typeError('Caracteres ingresados no validos').required('Debe ingresar un tipo de vivienda'),
      //  totalValue: yup.number().typeError('Debe ingresar un numero').required('El valor total de la vivienda es requerido'),
      //  machineryValue: yup.number().typeError('Debe ingresar un numero').required('El valor de la maquinaria es requerido'),
      //  furnitureValue: yup.number().typeError('Debe ingresar un numero').required('El valor de la inmobiliaria es requerido'),
      //  startCountry: yup.number().typeError('Debe seleccionar un pais').required('Debe seleccionar un pais'),
      //  endCountry: yup.number().typeError('Debe seleccionar un pais').required('Debe seleccionar un pais'),
      //  startDate: yup.date().typeError('Debe ingresar una fecha').required('Debe ingresar una fecha'),
      //  endDate: yup.date().typeError('Debe ingresar una fecha').required('Debe ingresar una fecha'),
      //  brand: yup.string().typeError('Caracteres ingresados no validos').required('Debe ingresar una marca'),
      //  class: yup.string().typeError('Caracteres ingresados no validos').required('Debe ingresar una clase'),
      //  model: yup.string().typeError('Caracteres ingresados no validos').required('Debe ingresar un modelo'),
      //  vehicleType: yup.string().typeError('Caracteres ingresados no validos').required('Debe ingresar un tipo de vehiculo'),
      //  serviceType: yup.string().typeError('Caracteres ingresados no validos').required('Debe ingresar un tipo de servicio'),
      //  gasConverted: yup.boolean().typeError('Debe seleccionar una Opcion').required('Debe seleccionar una Opcion'),
      //  vehicleAge: yup.number().typeError('Debe ingresar un numero').required('La Edad del vehiculo es requerido'),
    })
    .required();
